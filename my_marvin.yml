jenkins:
  systemMessage: "Welcome to the Chocolatine-Powered Marvin Jenkins Instance."
  securityRealm:
    allowSignup: false
  users:
    - id: "chocolateen"
      password: ${USER_CHOCOLATEEN_PASSWORD}
      name: "Hugo"
    - id: "vaugie_g"
      password: ${USER_VAUGIE_G_PASSWORD}
      name: "Garance"
    - id: "i_dont_know"
      password: ${USER_I_DONT_KNOW_PASSWORD}
      name: "Jeremy"
    - id: "nasso"
      password: ${USER_NASSO_PASSWORD}
      name: "Nassim"
 authorizationStrategy:
    roleBased:
      roles:
        - name: "admin"
          description: "Marvin master"
          permissions:
            - "Overall/Administer"
          assignments:
            - "Hugo"
        - name: "ape"
          description: "Pedagogical team member"
          permissions:
            - "Job/Build"
            - "Job/Workspace"
          assignments:
            - "Jeremy"
        - name: "gorilla"
          description: "Group Obsessively Researching Innovation Linked to Learning and Accomplishment"
          permissions:
            - "Job/Build"
            - "Job/Workspace"
            - "Job/Create"
            - "Job/Configure"
            - "Job/Delete"
            - "Job/Move"
            - "Job/Cancel"
          assignments:
            - "Garance"
        - name: "assist"
          description: "Assistant"
          permissions:
            - "Job/Read"
          assignments:
            - "Nassim"
folders:
  - name: "Tools"
    description: "Folder for miscellaneous tools."
jobs:
  - script: |
      folder('Tools') {
        displayName('clone-repository')
        parameters {
          string(name: 'GIT_REPOSITORY_URL', description: 'Git URL of the repository to clone')
        }
        steps {
          shell('git clone ${params.GIT_REPOSITORY_URL}')
          cleanWs()
        }
        disabled(false)
        properties([])
        triggers([])
      }
  - script: |
      folder('Tools') {
        displayName('SEED')
        parameters {
          string(name: 'GITHUB_NAME', description: 'GitHub repository owner/repo_name')
          string(name: 'DISPLAY_NAME', description: 'Display name for the job')
        }
        steps {
          jobDsl(targets: ['job_dsl.groovy'])
          cleanWs()
        }
        disabled(false)
        properties([])
        triggers([])
      }
